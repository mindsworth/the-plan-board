{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","containers/Home/fixtures.js","containers/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","isOpen","setIsOpen","className","Container","fluid","Row","Col","Navbar","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Button","color","Footer","lg","src","alt","features","label","imgSrc","text","plans","Home","props","renderFormGroup","FormGroup","Label","for","Input","type","name","id","placeholder","md","Form","map","item","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.87e823ed.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container,\n  Row,\n  Col,\n  Button,\n} from \"reactstrap\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <header className=\"header\">\n      <Container fluid>\n        <Row>\n          <Col>\n            <Navbar light expand=\"lg\">\n              <NavbarBrand href=\"/\">\n                the<span>plan</span>board\n              </NavbarBrand>\n              <NavbarToggler onClick={toggle} />\n              <Collapse isOpen={isOpen} navbar>\n                <Nav className=\"menu\" navbar>\n                  <NavItem>\n                    <NavLink href=\"/\">Plan Your Event</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"/\">Start a planning Agency</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink href=\"/\">Help</NavLink>\n                  </NavItem>\n                  <NavItem className=\"auth-wrap\">\n                    <NavLink href=\"/\">\n                      <Button color=\"login rounded-pill\">Login</Button>\n                    </NavLink>\n                    <NavLink href=\"/\">\n                      <Button color=\"sign-up rounded-pill\">Sign up</Button>\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n              </Collapse>\n            </Navbar>\n          </Col>\n        </Row>\n      </Container>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport {\n  NavbarBrand,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col lg=\"3\">\n            <NavbarBrand href=\"/\">\n              the<span>plan</span>board\n            </NavbarBrand>\n          </Col>\n          <Col lg=\"7\">\n            <div className=\"links\">\n              <ul>\n                <h6>Dashboard</h6>\n                <li>Users</li>\n                <li>Calendar</li>\n                <li>Bills</li>\n                <li>Settings</li>\n              </ul>\n              <ul>\n                <h6>Account</h6>\n                <li>Login</li>\n                <li>Register</li>\n                <li>Settings profile</li>\n              </ul>\n              <ul>\n                <h6>Agents</h6>\n                <li>Monitoring</li>\n                <li>Collaborating</li>\n                <li>Invoice</li>\n              </ul>\n            </div>\n          </Col>\n          <Col lg=\"2\">\n            <div className=\"social\">\n              <div className=\"social-inner\">\n                <img src=\"images/facebook.svg\" alt=\"\" />\n                <img src=\"images/twitter.svg\" alt=\"\" />\n                <img src=\"images/youtube-play.svg\" alt=\"\" />\n                <img src=\"images/mail.svg\" alt=\"\" />\n                <img src=\"images/instagram.svg\" alt=\"\" />\n              </div>\n              <p>Copyright 2019</p>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const features = [\n  {\n    label: \"Budgeting\",\n    imgSrc: \"budgeting\",\n    text:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\n  },\n  {\n    label: \"Templates\",\n    imgSrc: \"templates\",\n    text:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed domagna aliqua.\",\n  },\n  {\n    label: \"Task Management\",\n    imgSrc: \"task\",\n    text: \"Dolor sit amet, consectetur adipiscing elit, sed do eiusmod.\",\n  },\n  {\n    label: \"Collaborating and messaging\",\n    imgSrc: \"collabo\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do.\",\n  },\n  {\n    label: \"Progress Tracking\",\n    imgSrc: \"tracking\",\n    text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do.\",\n  },\n];\n\nexport const plans = [\n  {\n    label: \"Manage & track clients\",\n    imgSrc: \"plan-icon1\",\n    text: \"Lorem ipsum dolor sit amet, consectetur.\",\n  },\n  {\n    label: \"Manage & monitor agents\",\n    imgSrc: \"plan-icon2\",\n    text: \"Lorem ipsum dolor sit amet, consectetur .\",\n  },\n  {\n    label: \"Client & Agent collaborating test\",\n    imgSrc: \"plan-icon3\",\n    text: \"Dolor sit amet, consectetur adipiscing.\",\n  },\n  {\n    label: \"Invoicing and billing\",\n    imgSrc: \"plan-icon4\",\n    text: \"Lorem ipsum dolor sit amet, consectetur.\",\n  },\n];\n","import React, { Fragment } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport { features, plans } from \"./fixtures\";\nimport \"./Home.scss\";\n\nconst Home = (props) => {\n  const renderFormGroup = () => (\n    <Fragment>\n      <FormGroup>\n        <Label for=\"exampleEmail\">Name Your Event</Label>\n        <Input\n          type=\"name\"\n          name=\"text\"\n          id=\"exampleEmail\"\n          placeholder=\"i.e My graduation party\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleSelect\">Event Type</Label>\n        <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\n          <option>Select</option>\n          <option>item 1</option>\n          <option>item 2</option>\n        </Input>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Your Email</Label>\n        <Input\n          type=\"email\"\n          name=\"email\"\n          id=\"examplePassword\"\n          placeholder=\"To tracking Your Event\"\n        />\n      </FormGroup>\n      <FormGroup className=\"text-center mt-4\">\n        <Button className=\"rounded-pill custom-btn\">Plan Your Event</Button>\n      </FormGroup>\n    </Fragment>\n  );\n  const renderHero = () => (\n    <section className=\"hero\">\n      <Container>\n        <Row>\n          <Col className=\"header-title\">\n            <h4 className=\"md-title\">Plan. Organize. Tracks</h4>\n            <h1 className=\"xl-title\">A new way to manage your events</h1>\n          </Col>\n        </Row>\n      </Container>\n      <Container className=\"hero-form__wrap\">\n        <img\n          className=\"illustration-left\"\n          src=\"images/illustration-left.svg\"\n          alt=\"\"\n        />\n        <img\n          className=\"illustration-right\"\n          src=\"images/illustration-right.svg\"\n          alt=\"\"\n        />\n        <Row className=\"justify-content-center\">\n          <Col md=\"5\">\n            <Form className=\"hero-form\">\n              <h4 className=\"md-title\">Start planning your next event</h4>\n              {renderFormGroup()}\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n\n  const renderSlider = () => (\n    <section className=\"slider\">\n      <Container className=\"\">\n        <Row className=\"row-eq-height\">\n          <Col lg=\"5\" className=\"slider__content\">\n            <div>\n              <h2 className=\"lg-title\">\n                Create Dashboards <br />& Stay in control\n              </h2>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididu.\n              </p>\n            </div>\n          </Col>\n          <Col lg=\"7\">\n            <div className=\"slider__hero\">\n              <img src=\"images/dashboard.png\" alt=\"\" />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n\n  const renderFeatures = () => (\n    <section className=\"features\">\n      <Container>\n        <Row className=\"row-eq-height justify-content-center\">\n          <Col lg=\"12\" className=\"title__wrap\">\n            <h2 className=\"lg-title\">Features</h2>\n          </Col>\n          {features.map((item, index) => (\n            <Col key={index} lg=\"4\" className=\"features__card\">\n              <img src={`images/${item.imgSrc}.svg`} alt=\"\" />\n              <h6 className=\"sm-title\">{item.label}</h6>\n              <p>{item.text}</p>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </section>\n  );\n\n  const renderPlans = () => (\n    <section className=\"plans\">\n      <Container>\n        <Row className=\"row-eq-height justify-content-center\">\n          <Col lg=\"12\" className=\"title__wrap\">\n            <h2 className=\"lg-title\">Planning Agency</h2>\n          </Col>\n          {plans.map((item, index) => (\n            <Col key={index} lg=\"3\" className=\"plans__card\">\n              <img src={`images/${item.imgSrc}.svg`} alt=\"\" />\n              <div className=\"plans__card__content\">\n                <h6 className=\"sm-title\">{item.label}</h6>\n                <p>{item.text}</p>\n              </div>\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </section>\n  );\n\n  const renderGetStarted = () => (\n    <section className=\"get-started\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col lg=\"12\" className=\"title__wrap\">\n            <h2 className=\"lg-title\">Start Planning</h2>\n          </Col>\n          <Col>\n            <Form className=\"get-started-form\">{renderFormGroup()}</Form>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n\n  return (\n    <main className=\"home\">\n      <img className=\"top-circle\" src=\"images/top-circle.svg\" alt=\"\" />\n      <img className=\"bottom-circle\" src=\"images/bottom-circle.svg\" alt=\"\" />\n      <Header />\n      {renderHero()}\n      {renderSlider()}\n      {renderFeatures()}\n      {renderPlans()}\n      {renderGetStarted()}\n      <Footer />\n    </main>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./containers/Home\";\n\nfunction App() {\n  return (\n    <main className=\"application\">\n      <Home />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}